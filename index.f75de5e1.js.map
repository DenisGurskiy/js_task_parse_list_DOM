{"mappings":"AAAA;AAEA,MAAM,kBAAkB,SAAS,gBAAgB,CAAC;AAElD,MAAM,YAAY,CAAC;IACjB,OAAO,SAAS,SAAS,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,KAAK;AAChE;AAEA,MAAM,WAAW,CAAC;IAChB,MAAM,UAAU;WAAI;KAAK;IAEzB,OAAO,QAAQ,IAAI,CAAC,CAAC,WAAW;QAC9B,OAAO,UAAU,aAAa,UAAU;IAC1C;AACF;AAEA,MAAM,eAAe,CAAC;IACpB,MAAM,UAAU;WAAI;KAAK;IAEzB,OAAO,QAAQ,GAAG,CAAC,CAAC;QAClB,OAAO;YACL,MAAM,SAAS,SAAS;YACxB,UAAU,SAAS,OAAO,CAAC,QAAQ;YACnC,QAAQ,SAAS,OAAO,CAAC,MAAM;YAC/B,KAAK,SAAS,OAAO,CAAC,GAAG;QAC3B;IACF;AACF;AAEA,SAAS;AACT,aAAa;AAEb,SAAS,aAAa,CAAC,MAAM,OAAO,IAAI,SAAS","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst listOfEmployees = document.querySelectorAll('li');\n\nconst getSalary = (employee) => {\n  return parseInt(employee.dataset.salary.replace(/[$,]/g, ''), 10);\n};\n\nconst sortList = (list) => {\n  const newList = [...list];\n\n  return newList.sort((employee1, employee2) => {\n    return getSalary(employee2) - getSalary(employee1);\n  });\n};\n\nconst getEmployees = (list) => {\n  const newList = [...list];\n\n  return newList.map((employee) => {\n    return {\n      name: employee.outerText,\n      position: employee.dataset.position,\n      salary: employee.dataset.salary,\n      age: employee.dataset.age,\n    };\n  });\n};\n\nsortList(listOfEmployees);\ngetEmployees(listOfEmployees);\n\ndocument.querySelector('ul').prepend(...sortList(listOfEmployees));\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}